#
# This workflow calls the main distribution pipeline from DuckDB to build, test and (optionally) release the extension
#
name: Main Extension Distribution Pipeline
on:
  push:
    branches: [main, stable]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  duckdb-main-build:
    name: Build extension binaries (internal)
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_distribution.yml@main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: snowflake

  package-extension-with-driver:
    name: Build complete extension package
    runs-on: ubuntu-latest
    needs: duckdb-main-build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: snowflake-main-extension-linux_amd64
          path: artifacts/

      - name: Download ADBC driver
        run: make download-adbc

      - name: Package extension with driver
        run: |
          mkdir -p dist
          cp artifacts/snowflake.duckdb_extension dist/
          cp adbc_drivers/libadbc_driver_snowflake.so dist/
          zip -r snowflake-extension-with-driver-duckdb-1.4-linux_amd64.zip dist/
          ls -la dist/

      - name: Upload packaged extension
        uses: actions/upload-artifact@v4
        with:
          name: snowflake-duckdb-1.4-linux_amd64
          path: snowflake-extension-with-driver-duckdb-1.4-linux_amd64.zip

  code-quality-check:
    name: Code Quality Check
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_code_quality.yml@main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: snowflake
      format_checks: 'format;tidy'

  snowflake-tests:
    name: Snowflake Extension Tests
    runs-on: ubuntu-latest
    needs: duckdb-main-build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable')
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake ninja-build

      - name: Download ADBC driver
        run: make download-adbc

      - name: Build extension with Ninja
        run: |
          # Use fewer parallel jobs to avoid memory issues
          make ci-debug-build

      - name: Run Snowflake tests (if credentials available)
        if: env.SNOWFLAKE_ACCOUNT != ''
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USERNAME: ${{ secrets.SNOWFLAKE_USERNAME }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        run: make test-snowflake

      - name: Skip tests (no credentials)
        if: env.SNOWFLAKE_ACCOUNT == ''
        run: |
          echo "Skipping Snowflake tests - no credentials provided"
          echo "To enable tests, add the following secrets to the repository:"
          echo "  SNOWFLAKE_ACCOUNT"
          echo "  SNOWFLAKE_USERNAME" 
          echo "  SNOWFLAKE_PASSWORD"
          echo "  SNOWFLAKE_DATABASE"
