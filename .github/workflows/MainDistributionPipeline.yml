#
# This workflow calls the main distribution pipeline from DuckDB to build, test and (optionally) release the extension
#
name: Main Extension Distribution Pipeline
on:
  push:
    branches: [main, stable]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ github.head_ref || '' }}-${{ github.base_ref || '' }}-${{ github.ref != 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

jobs:
  duckdb-main-build:
    name: Build extension binaries (internal)
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_distribution.yml@main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: snowflake

  # Package complete extensions with ADBC drivers
  # Note: This creates snowflake-extension-1.4-{platform} artifacts that include both
  # the extension binary and the ADBC driver. The duckdb-main-build job also creates
  # individual snowflake-main-extension-{platform} artifacts (extension only).
  # Users should download the complete packages for immediate use.
  package-extension-with-driver:
    name: Build complete extension package
    runs-on: ${{ matrix.runner }}
    needs: duckdb-main-build
    if: always() && (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/stable' || github.ref == 'refs/heads/feature/packaging-with-adbc-driver' || github.ref == 'refs/heads/feature/packaging-with-adbc-driver-stable')
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux platforms
          - duckdb_arch: linux_amd64
            runner: ubuntu-24.04
            platform_name: linux_amd64
          - duckdb_arch: linux_arm64
            runner: ubuntu-24.04-arm
            platform_name: linux_arm64
          - duckdb_arch: linux_amd64_musl
            runner: ubuntu-24.04
            platform_name: linux_amd64_musl
          # macOS platforms
          - duckdb_arch: osx_amd64
            runner: macos-14
            platform_name: osx_amd64
          - duckdb_arch: osx_arm64
            runner: macos-14
            platform_name: osx_arm64
          # Windows platforms
          - duckdb_arch: windows_amd64
            runner: windows-latest
            platform_name: windows_amd64
          - duckdb_arch: windows_amd64_mingw
            runner: windows-latest
            platform_name: windows_amd64_mingw
          # WebAssembly platforms (skip - they don't need native ADBC drivers)
          # - duckdb_arch: wasm_mvp
          #   runner: ubuntu-24.04
          #   platform_name: wasm_mvp
          # - duckdb_arch: wasm_eh
          #   runner: ubuntu-24.04
          #   platform_name: wasm_eh
          # - duckdb_arch: wasm_threads
          #   runner: ubuntu-24.04
          #   platform_name: wasm_threads
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: snowflake-main-extension-${{ matrix.duckdb_arch }}
          path: artifacts/

      - name: Download ADBC driver
        run: make download-adbc

      - name: Package extension with driver (Linux/macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mkdir -p dist
          cp artifacts/snowflake.duckdb_extension dist/
          cp adbc_drivers/libadbc_driver_snowflake.so dist/
          zip -r snowflake-extension-with-driver-duckdb-1.4-${{ matrix.platform_name }}.zip dist/
          ls -la dist/

      - name: Package extension with driver (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir dist
          copy artifacts\snowflake.duckdb_extension dist\
          copy adbc_drivers\libadbc_driver_snowflake.so dist\
          powershell Compress-Archive -Path dist\* -DestinationPath snowflake-extension-with-driver-duckdb-1.4-${{ matrix.platform_name }}.zip
          dir dist

      - name: Upload packaged extension
        uses: actions/upload-artifact@v4
        with:
          name: snowflake-extension-1.4-${{ matrix.platform_name }}
          path: snowflake-extension-with-driver-duckdb-1.4-${{ matrix.platform_name }}.zip
          retention-days: 30

  code-quality-check:
    name: Code Quality Check
    uses: duckdb/extension-ci-tools/.github/workflows/_extension_code_quality.yml@main
    with:
      duckdb_version: main
      ci_tools_version: main
      extension_name: snowflake
      format_checks: 'format;tidy'

  build-complete-packages:
    name: Build complete extension package
    needs: [duckdb-main-build, code-quality-check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - name: linux_amd64
            wheel: adbc_driver_snowflake-1.8.0-py3-none-manylinux1_x86_64.manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_5_x86_64.whl
          - name: linux_arm64
            wheel: adbc_driver_snowflake-1.8.0-py3-none-manylinux2014_aarch64.manylinux_2_17_aarch64.whl
          - name: linux_amd64_musl
            wheel: adbc_driver_snowflake-1.8.0-py3-none-manylinux1_x86_64.manylinux2014_x86_64.manylinux_2_17_x86_64.manylinux_2_5_x86_64.whl
          - name: osx_amd64
            wheel: adbc_driver_snowflake-1.8.0-py3-none-macosx_10_15_x86_64.whl
          - name: osx_arm64
            wheel: adbc_driver_snowflake-1.8.0-py3-none-macosx_11_0_arm64.whl
          - name: windows_amd64
            wheel: adbc_driver_snowflake-1.8.0-py3-none-win_amd64.whl
          - name: windows_amd64_mingw
            wheel: adbc_driver_snowflake-1.8.0-py3-none-win_amd64.whl
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download extension artifact
        uses: actions/download-artifact@v4
        with:
          name: snowflake-main-extension-${{ matrix.platform.name }}
          path: ./extension-artifact

      - name: Download ADBC driver
        run: |
          mkdir -p adbc_driver
          cd adbc_driver
          wget -q https://github.com/apache/arrow-adbc/releases/download/apache-arrow-adbc-20/${{ matrix.platform.wheel }}
          unzip -q ${{ matrix.platform.wheel }}
          ls -lh adbc_driver_snowflake/
          
      - name: Create complete package
        run: |
          mkdir -p package/snowflake
          
          # Copy extension file
          find extension-artifact -name "*.duckdb_extension" -exec cp {} package/snowflake/ \;
          
          # Copy ADBC driver
          if [[ "${{ matrix.platform.name }}" == windows* ]]; then
            cp adbc_driver/adbc_driver_snowflake/adbc_driver_snowflake.dll package/snowflake/
          else
            cp adbc_driver/adbc_driver_snowflake/libadbc_driver_snowflake.so package/snowflake/
          fi
          
          # Create zip archive
          cd package
          zip -r ../snowflake-extension-1.4-${{ matrix.platform.name }}.zip snowflake/
          cd ..
          
          # Display package info
          echo "Package contents:"
          unzip -l snowflake-extension-1.4-${{ matrix.platform.name }}.zip
          echo ""
          echo "Package size:"
          ls -lh snowflake-extension-1.4-${{ matrix.platform.name }}.zip
          
      - name: Validate package size
        run: |
          PACKAGE_SIZE=$(stat -f%z snowflake-extension-1.4-${{ matrix.platform.name }}.zip 2>/dev/null || stat -c%s snowflake-extension-1.4-${{ matrix.platform.name }}.zip)
          MIN_SIZE=$((10 * 1024 * 1024))  # 10MB minimum (ADBC driver is ~20MB)
          
          if [ $PACKAGE_SIZE -lt $MIN_SIZE ]; then
            echo "ERROR: Package size ($PACKAGE_SIZE bytes) is too small. Expected at least $MIN_SIZE bytes."
            echo "This indicates the ADBC driver may be missing."
            exit 1
          fi
          
          echo "âœ“ Package size validation passed: $(echo "scale=2; $PACKAGE_SIZE / 1024 / 1024" | bc)MB"
          
      - name: Upload complete package
        uses: actions/upload-artifact@v4
        with:
          name: snowflake-extension-1.4-${{ matrix.platform.name }}
          path: snowflake-extension-1.4-${{ matrix.platform.name }}.zip
          retention-days: 30
          if-no-files-found: error

