-- Authentication Test Template for DuckDB Snowflake Extension
-- This file demonstrates how to test both supported authentication methods

-- Load the extension
LOAD 'build/debug/extension/snowflake/snowflake.duckdb_extension';

-- ============================================================================
-- Method 1: Password Authentication
-- ============================================================================
-- Use this for username/password authentication
--
-- CREATE OR REPLACE SECRET snowflake_password (
--     TYPE SNOWFLAKE,
--     ACCOUNT 'YOUR_ACCOUNT',          -- e.g., 'abc123' or 'abc123.us-east-1'
--     DATABASE 'YOUR_DATABASE',        -- e.g., 'SNOWFLAKE_SAMPLE_DATA'
--     USER 'YOUR_USERNAME',            -- Your Snowflake username
--     PASSWORD 'YOUR_PASSWORD'         -- Your Snowflake password
-- );
--
-- -- Test connection
-- ATTACH '' AS sf (TYPE snowflake, SECRET snowflake_password);
--
-- -- Verify connection
-- SELECT current_user() as user;
-- SELECT database_name FROM sf.information_schema.databases LIMIT 5;
--
-- -- Cleanup
-- DETACH sf;

-- ============================================================================
-- Method 2: OAuth Token Authentication
-- ============================================================================
-- Use this for custom EXTERNAL_OAUTH integrations (Auth0, custom Okta, etc.)
-- Requires:
--   1. Snowflake EXTERNAL_OAUTH security integration configured
--   2. Pre-obtained OAuth access token from your identity provider
--
-- CREATE OR REPLACE SECRET snowflake_oauth (
--     TYPE SNOWFLAKE,
--     ACCOUNT 'YOUR_ACCOUNT',        -- e.g., 'abc123' or 'abc123.us-east-1'
--     DATABASE 'YOUR_DATABASE',      -- e.g., 'SNOWFLAKE_SAMPLE_DATA'
--     OAUTH_TOKEN 'YOUR_OAUTH_TOKEN' -- OAuth access token from Auth0/Okta/etc.
-- );
--
-- -- Test connection
-- ATTACH '' AS sf (TYPE snowflake, SECRET snowflake_oauth);
--
-- -- Verify connection
-- SELECT current_user() as user;
-- SELECT database_name FROM sf.information_schema.databases LIMIT 5;
--
-- -- Cleanup
-- DETACH sf;

-- ============================================================================
-- Method 3: SSO/OIDC with Token Acquisition (NOT YET IMPLEMENTED)
-- ============================================================================
-- Future: Automatic OAuth token acquisition from identity provider
-- Will support: Auth0, custom Okta, Azure AD, etc.
-- Status: Requires implementing PKCE/OAuth flow to obtain token automatically
--
-- Planned usage:
-- CREATE OR REPLACE SECRET snowflake_sso_auto (
--     TYPE SNOWFLAKE,
--     ACCOUNT 'YOUR_ACCOUNT',
--     DATABASE 'YOUR_DATABASE',
--     OIDC_CLIENT_ID 'your_client_id',
--     OIDC_ISSUER_URL 'https://your-auth0-domain.auth0.com',
--     OIDC_REDIRECT_URI 'http://localhost:8080/callback'
-- );
--
-- This will:
--   1. Open browser to identity provider
--   2. User authenticates
--   3. Token acquired automatically
--   4. Connection established
--
-- Current workaround: Use Method 2 with manually obtained token

-- ============================================================================
-- Notes:
-- ============================================================================
-- 1. Uncomment the method you want to test
-- 2. Replace placeholder values with your actual credentials
-- 3. For SSO, ensure Snowflake EXTERNAL_OAUTH integration is configured
-- 4. For SSO, browser must open and you must complete authentication
-- 5. DETACH when done to close the connection

